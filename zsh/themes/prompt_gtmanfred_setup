prompt_char(){
    [[ -n $vcs_info_msg_0_ ]] && echo '╘═😸 ' && return
    echo '└─╼ '
}

+vi-git-status () {
  # Untracked files.
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    hook_com[misc]='%F{r}?%f'
  fi
}
virtual_env(){
    if [[ -n $VIRTUAL_ENV ]]; then
        echo "with %F{g}virt_env%f:%F{blue}${VIRTUAL_ENV##*/}%f"
    fi
}
prompt_name(){
    if (( ! UID )); then
        print -l '%B%F{red}%n%f%b'
    else
        print -l '%B%F{green}%n%f%b'
    fi
}


prompt_gtmanfred_precmd(){
    vcs_info
}

prompt_gtmanfred_help(){
  cat <<EOH
gtmanfred's prompt
EOH
}

prompt_network_test(){
    ping -c1 cbast.iad.rackspace.com 2>&1 >/dev/null
    return $?
}

prompt_gtmanfred_preexec(){
    return 0
    if ! prompt_network_test; then
        return 0
    fi
    cmd="${${=${*[2]}}[1]}"
    cmdlist=(whois openssl ssh)
    
    if [[ ${cmdlist[(r)$cmd]} == $cmd ]]; then
        tsocks ${@[1]% *} ${@[1]# *}
    fi
}

prompt_gtmanfred_setup() {
    local name
    setopt prompt_subst
    autoload -U colors && colors
    autoload -Uz add-zsh-hook vcs_info

    prompt_opts=(cr percent subst)
    add-zsh-hook precmd prompt_gtmanfred_precmd
    add-zsh-hook preexec prompt_gtmanfred_preexec

    zstyle ':vcs_info:*' enable bzr git hg svn
    zstyle ':vcs_info:*' check-for-changes true
    zstyle ':vcs_info:*' stagedstr '%F{g}●%f'
    zstyle ':vcs_info:*' unstagedstr '%F{y}!%f'
    zstyle ':vcs_info:*' formats 'on %F{m}%b%c%u%m%F{n}'
    zstyle ':vcs_info:*' actionformats "%b%c%u|%F{c}%a%f"
    zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b|%F{c}%r%f'
    zstyle ':vcs_info:git*+set-message:*' hooks git-status


    PROMPT='┌─ $(prompt_name) at %F{yellow}%m%f in %B%F{green}%~%f%b ${vcs_info_msg_0_} $(virtual_env)$prompt_newline$(prompt_char)%f'

    RPROMPT='%(?,%F{green}(⌐■_■),%F{yellow}%? %F{red}（╯°□°）╯︵ ┻━┻)%f'
    PS4='+%N:%i:%x:%I>'
}

prompt_gtmanfred_preview(){
    prompt_preview_theme gtmanfred "$@"
}
prompt_gtmanfred_setup "$@"
